{"version":3,"sources":["components/PaginationBar/PaginationBar.js","components/assets/DescendingIcon/DescendingIcon.js","components/assets/LoupIcon/LoupIcon.js","components/assets/ClearIcon/ClearIcon.js","components/TableHeader/TableHeader.js","components/TableSortingRow/TableSortingRow.js","components/TableFilteringRow/TableFilteringRow.js","components/TableContetRow/TableContetRow.js","components/Table/Table.js","components/App.js","serviceWorker.js","index.js"],"names":["Bar","styled","div","Button","button","PaginationBar","changeOffset","offset","itemsNumber","onClick","disabled","parseInt","Math","ceil","DescendingIcon","version","id","xmlns","xlink","x","y","width","height","viewBox","style","enableBackground","space","fill","cx","cy","r","d","points","LoupIcon","ClearIcon","HeaderBody","HeaderElement","Info","ClearButton","propertyNamesMap","name","city","totalIncome","averageIncome","lastMonthIncome","directionNamesMap","ASC","DESC","TableHeader","clear","filterProp","filterPhr","sortProp","sortDir","tr","DataCell","td","props","active","TableSortingRow","onSortChange","sortProperty","sortDirection","SearchField","InputField","input","DataField","TableFilteringRow","onFilterChange","filterProperty","filterPhrase","type","onChange","e","target","value","toLowerCase","placeholder","NumberDataCell","TableContetRow","company","index","key","Table","companiesData","displayNumber","useState","changeSortProperty","changeSortDirection","changeFiltePhrase","changeFilterProperty","firmy","zmienFirmy","filteredCompaniesNumber","changeFilteredCompaniesNumber","useEffect","updatedList","filter","filterFunction","sort","sortFunction","length","slice","comp","toString","includes","a","b","filterVal","map","elem","AppBody","App","isLoading","changeLoading","companiesList","updateCompaniesList","updateCompaniesData","axios","get","then","res","data","catch","err","console","log","all","spread","responses","companiesIncomes","updatedCompanies","companyToUpdate","find","sumOfIncomes","incomes","income","Date","date","year","getFullYear","month","getMonth","parseFloat","reduce","prev","curr","Object","assign","Number","toFixed","errors","href","title","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4050c7fb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Bar = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    background-color: lightblue;\r\n    padding: 10px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    background-color: lightgreen;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 0 10px;\r\n    cursor: pointer;\r\n    border: 1px solid green;\r\n    &:hover {\r\n        background-color: green;\r\n    }\r\n`;\r\n\r\nconst PaginationBar = ({ changeOffset, offset, itemsNumber }) => {\r\n    return (\r\n        <Bar>\r\n            <Button\r\n                onClick={() => changeOffset(0)}\r\n                disabled={offset === 0 ? true : false}\r\n            >\r\n                {\"<< First page\"}\r\n            </Button>\r\n            <Button\r\n                onClick={() => changeOffset(offset - 20)}\r\n                disabled={offset - 20 < 0 ? true : false}\r\n            >\r\n                {\"< Prev\"}\r\n            </Button>\r\n            <div>\r\n                Page:\r\n                {parseInt(offset / 20 + 1.5)}/{Math.ceil(itemsNumber / 20)}\r\n                <br />\r\n                Results: {itemsNumber}\r\n            </div>\r\n            <Button\r\n                onClick={() => changeOffset(offset + 20)}\r\n                disabled={offset >= itemsNumber - 20 ? true : false}\r\n            >\r\n                {\"Next >\"}\r\n            </Button>\r\n            <Button\r\n                onClick={() => changeOffset(itemsNumber - 20)}\r\n                disabled={offset >= itemsNumber - 20 ? true : false}\r\n            >\r\n                {\"Last page >>\"}\r\n            </Button>\r\n        </Bar>\r\n    );\r\n};\r\n\r\nexport default PaginationBar;\r\n","import React from \"react\";\r\n\r\nconst DescendingIcon = () => {\r\n    return (\r\n        <svg\r\n            version=\"1.1\"\r\n            id=\"Capa_1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            xlink=\"http://www.w3.org/1999/xlink\"\r\n            x=\"0px\"\r\n            y=\"0px\"\r\n            width=\"16px\"\r\n            height=\"16px\"\r\n            viewBox=\"0 0 512 512\"\r\n            style={{ enableBackground: \"new 0 0 512 512\" }}\r\n            space=\"preserve\"\r\n        >\r\n            <circle style={{ fill: \"#983262\" }} cx=\"256\" cy=\"256\" r=\"256\" />\r\n            <path\r\n                style={{ fill: \"#662E57\" }}\r\n                d=\"M512,256c0-2.372-0.038-4.734-0.102-7.09L373.322,110.333l-14.994,191.994L166.333,110.333L107,147\r\n\tl40.532,40.532L107,199.067l41.522,41.522L107,251.133l38.127,38.127L107,303.2l36.119,36.118L107,355.267l34.647,34.647\r\n\tL107,407.333l99.954,99.954C222.83,510.368,239.223,512,256,512C397.385,512,512,397.385,512,256z\"\r\n            />\r\n            <rect\r\n                x=\"107\"\r\n                y=\"370.67\"\r\n                style={{ fill: \"#FFDC00\" }}\r\n                width=\"266\"\r\n                height=\"36.667\"\r\n            />\r\n            <rect\r\n                x=\"170.33\"\r\n                y=\"370.67\"\r\n                style={{ fill: \"#FFC000\" }}\r\n                width=\"202.67\"\r\n                height=\"36.667\"\r\n            />\r\n            <rect\r\n                x=\"107\"\r\n                y=\"318.6\"\r\n                style={{ fill: \"#FFDC00\" }}\r\n                width=\"184\"\r\n                height=\"36.667\"\r\n            />\r\n            <rect\r\n                x=\"170.33\"\r\n                y=\"318.6\"\r\n                style={{ fill: \"#FFC000\" }}\r\n                width=\"120.67\"\r\n                height=\"36.667\"\r\n            />\r\n            <rect\r\n                x=\"107\"\r\n                y=\"266.53\"\r\n                style={{ fill: \"#FFDC00\" }}\r\n                width=\"155\"\r\n                height=\"36.667\"\r\n            />\r\n            <rect\r\n                x=\"170.33\"\r\n                y=\"266.53\"\r\n                style={{ fill: \"#FFC000\" }}\r\n                width=\"91.67\"\r\n                height=\"36.667\"\r\n            />\r\n            <g>\r\n                <rect\r\n                    x=\"107\"\r\n                    y=\"214.47\"\r\n                    style={{ fill: \"#FFDC00\" }}\r\n                    width=\"126.67\"\r\n                    height=\"36.667\"\r\n                />\r\n                <rect\r\n                    x=\"107\"\r\n                    y=\"162.4\"\r\n                    style={{ fill: \"#FFDC00\" }}\r\n                    width=\"94.67\"\r\n                    height=\"36.667\"\r\n                />\r\n            </g>\r\n            <g>\r\n                <rect\r\n                    x=\"170.33\"\r\n                    y=\"214.47\"\r\n                    style={{ fill: \"#FFC000\" }}\r\n                    width=\"63.33\"\r\n                    height=\"36.667\"\r\n                />\r\n                <rect\r\n                    x=\"170.33\"\r\n                    y=\"162.4\"\r\n                    style={{ fill: \"#FFC000\" }}\r\n                    width=\"31.33\"\r\n                    height=\"36.667\"\r\n                />\r\n            </g>\r\n            <rect\r\n                x=\"107\"\r\n                y=\"110.33\"\r\n                style={{ fill: \"#FFDC00\" }}\r\n                width=\"59.33\"\r\n                height=\"36.667\"\r\n            />\r\n            <polygon\r\n                style={{ fill: \"#FFFFFF\" }}\r\n                points=\"340,110.333 340,291.48 303.522,255.002 279.959,278.565 356.661,355.267 433.363,278.564 \r\n\t409.8,255.002 373.322,291.48 373.322,110.333 \"\r\n            />\r\n            <polygon\r\n                style={{ fill: \"#E0E0E0\" }}\r\n                points=\"356.661,355.267 433.363,278.564 409.8,255.002 373.322,291.48 373.322,110.333 \r\n\t356.661,110.333 \"\r\n            />\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default DescendingIcon;\r\n","import React from \"react\";\r\n\r\nconst LoupIcon = () => {\r\n    return (\r\n        <svg\r\n            version=\"1.1\"\r\n            id=\"Capa_1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            xlink=\"http://www.w3.org/1999/xlink\"\r\n            x=\"0px\"\r\n            y=\"0px\"\r\n            width=\"16px\"\r\n            height=\"16px\"\r\n            viewBox=\"0 0 512 512\"\r\n            style={{ \"enable-background\": \"new 0 0 512 512\" }}\r\n            space=\"preserve\"\r\n        >\r\n            <circle style={{ fill: \"#E9336D\" }} cx=\"256\" cy=\"256\" r=\"256\" />\r\n            <path\r\n                style={{ fill: \"#762957\" }}\r\n                d=\"M512,256c0-13.55-1.062-26.851-3.09-39.832L402.371,109.629c-48.156-48.156-126.233-48.156-174.389,0\r\n\tc-40.121,40.121-46.808,101.006-20.077,148.058L102.924,362.668c-9.112,9.112-9.112,23.886,0,32.998L216.168,508.91\r\n\tC229.149,510.938,242.45,512,256,512C397.385,512,512,397.385,512,256z\"\r\n            />\r\n            <path\r\n                style={{ fill: \"#FFA700\" }}\r\n                d=\"M116.334,409.076l-13.41-13.41c-9.112-9.112-9.112-23.886,0-32.998l110.549-110.549l46.408,46.408\r\n\tL149.332,409.076C140.22,418.188,125.446,418.188,116.334,409.076z\"\r\n            />\r\n            <path\r\n                style={{ fill: \"#FF6900\" }}\r\n                d=\"M259.882,298.533L149.333,409.082c-9.108,9.108-23.886,9.108-33.001-0.007l-6.703-6.703\r\n\tl127.046-127.046L259.882,298.533z\"\r\n            />\r\n            <circle\r\n                style={{ fill: \"#FFFFFF\" }}\r\n                cx=\"315.18\"\r\n                cy=\"196.82\"\r\n                r=\"123.31\"\r\n            />\r\n            <path\r\n                style={{ fill: \"#FFF4AA\" }}\r\n                d=\"M402.371,284.016c-40.121,40.121-101.01,46.818-148.054,20.082\r\n\tc-9.426-5.353-18.3-12.049-26.333-20.082l174.387-174.387C450.525,157.783,450.525,235.862,402.371,284.016z\"\r\n            />\r\n            <circle\r\n                style={{ fill: \"#00D4D1\" }}\r\n                cx=\"315.18\"\r\n                cy=\"196.82\"\r\n                r=\"91.42\"\r\n            />\r\n            <path\r\n                style={{ fill: \"#009CA0\" }}\r\n                d=\"M379.821,261.466c-35.702,35.702-93.586,35.702-129.287,0l129.28-129.28\r\n\tC415.516,167.887,415.523,225.764,379.821,261.466z\"\r\n            />\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default LoupIcon;\r\n","import React from \"react\";\r\n\r\nconst ClearIcon = () => {\r\n    return (\r\n        <svg\r\n            version=\"1.1\"\r\n            id=\"Layer_1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            xlink=\"http://www.w3.org/1999/xlink\"\r\n            x=\"0px\"\r\n            y=\"0px\"\r\n            width=\"16px\"\r\n            height=\"16px\"\r\n            viewBox=\"0 0 512 512\"\r\n            style={{ \"enable-background\": \"new 0 0 512 512\" }}\r\n            space=\"preserve\"\r\n        >\r\n            <path\r\n                style={{ fill: \"#FF7043\" }}\r\n                d=\"M507.586,208.51C485.318,89.819,381.156,0,256,0C114.615,0,0,114.616,0,256\r\n\tc0,125.156,89.819,229.318,208.511,251.585L507.586,208.51z\"\r\n            />\r\n            <path\r\n                style={{ fill: \"#FF5722\" }}\r\n                d=\"M512,256c0-16.229-1.527-32.099-4.414-47.49l-54.822-54.821L256,256L153.689,452.764l54.822,54.821\r\n\tC223.901,510.473,239.771,512,256,512C397.385,512,512,397.384,512,256z\"\r\n            />\r\n            <polygon\r\n                style={{ fill: \"#37474F\" }}\r\n                points=\"452.764,153.689 350.442,256 233.739,278.261 256,161.558 358.311,59.236 405.537,106.463 \r\n\t\"\r\n            />\r\n            <polygon\r\n                style={{ fill: \"#263238\" }}\r\n                points=\"452.764,358.311 358.311,452.764 256,350.442 222.609,256 350.442,256 \"\r\n            />\r\n            <polygon\r\n                style={{ fill: \"#37474F\" }}\r\n                points=\"208.779,233.739 161.558,256 59.236,358.311 153.689,452.764 256,350.442 256,256 \"\r\n            />\r\n            <polygon\r\n                style={{ fill: \"#455A64\" }}\r\n                points=\"256,161.558 256,256 161.558,256 59.236,153.689 106.463,106.463 153.689,59.236 \"\r\n            />\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n            <g></g>\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default ClearIcon;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AscendingIcon from \"../assets/AscendingIcon/AscendingIcon\";\r\nimport DescendingIcon from \"../assets/DescendingIcon/DescendingIcon\";\r\nimport LoupIcon from \"../assets/LoupIcon/LoupIcon\";\r\nimport ClearIcon from \"../assets/ClearIcon/ClearIcon\";\r\n\r\nconst HeaderBody = styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    background-color: lightblue;\r\n    padding: 10px;\r\n`;\r\n\r\nconst HeaderElement = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 30%;\r\n`;\r\n\r\nconst Info = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst ClearButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    border-radius: 10px;\r\n    border: solid darkgoldenrod 1px;\r\n    background-color: orange;\r\n    padding: 2px 5px;\r\n    color: white;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst propertyNamesMap = {\r\n    name: \"Name\",\r\n    city: \"City\",\r\n    totalIncome: \"Total Income\",\r\n    averageIncome: \"Average Income\",\r\n    lastMonthIncome: \"Last Month Income\",\r\n    id: \"Id\",\r\n};\r\n\r\nconst directionNamesMap = {\r\n    ASC: \"Ascending\",\r\n    DESC: \"Descending\",\r\n};\r\n\r\nconst TableHeader = ({ clear, filterProp, filterPhr, sortProp, sortDir }) => {\r\n    return (\r\n        <HeaderBody>\r\n            <HeaderElement>\r\n                <ClearButton onClick={clear}>\r\n                    <ClearIcon />\r\n                    <Info>Clear filters</Info>\r\n                </ClearButton>\r\n            </HeaderElement>\r\n            <HeaderElement>\r\n                <LoupIcon />\r\n                <Info>\r\n                    Filter: {!filterPhr && \"none\"}\r\n                    {filterProp &&\r\n                        filterPhr !== \"\" &&\r\n                        `\"${filterPhr}\" in \"${propertyNamesMap[filterProp]}\"`}\r\n                </Info>\r\n            </HeaderElement>\r\n            <HeaderElement>\r\n                <DescendingIcon />\r\n                <Info>\r\n                    Sort: {!sortProp && \"none\"}\r\n                    {sortProp && (\r\n                        <>\r\n                            <span>\r\n                                {`${directionNamesMap[sortDir]} in ${propertyNamesMap[sortProp]}`}\r\n                            </span>\r\n                        </>\r\n                    )}\r\n                </Info>\r\n            </HeaderElement>\r\n        </HeaderBody>\r\n    );\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DescendingIcon from \"../assets/DescendingIcon/DescendingIcon\";\r\nimport AscendingIcon from \"../assets/AscendingIcon/AscendingIcon\";\r\n\r\nconst Row = styled.tr`\r\n    display: flex;\r\n`;\r\n\r\nconst DataCell = styled.td`\r\n    max-width: 100%;\r\n    border: 1px solid green;\r\n    cursor: pointer;\r\n    align-items: center;\r\n    background-color: ${(props) => (props.active ? \"greenyellow\" : \"\")};\r\n    &:hover {\r\n        background-color: greenyellow;\r\n    }\r\n    text-align: center;\r\n`;\r\n\r\nconst TableSortingRow = ({ onSortChange, sortProperty, sortDirection }) => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <DescendingIcon />\r\n            </td>\r\n            <DataCell\r\n                onClick={() => onSortChange(\"name\")}\r\n                active={sortProperty === \"name\"}\r\n            >\r\n                <span>Name</span>\r\n                {/* <span>\r\n                    {sortProperty === \"name\" &&\r\n                        (sortDirection === \"ASC\" ? (\r\n                            <AscendingIcon />\r\n                        ) : (\r\n                            <DescendingIcon />\r\n                        ))}\r\n                </span> */}\r\n            </DataCell>\r\n            <DataCell\r\n                onClick={() => onSortChange(\"city\")}\r\n                active={sortProperty === \"city\"}\r\n            >\r\n                <span>City</span>\r\n                {/* <span>\r\n                    {sortProperty === \"city\" &&\r\n                        (sortDirection === \"ASC\" ? (\r\n                            <AscendingIcon />\r\n                        ) : (\r\n                            <DescendingIcon />\r\n                        ))}\r\n                </span> */}\r\n            </DataCell>\r\n            <DataCell\r\n                onClick={() => onSortChange(\"totalIncome\")}\r\n                active={sortProperty === \"totalIncome\"}\r\n            >\r\n                <span>Total Income</span>\r\n                {/* <span>\r\n                    {sortProperty === \"totalIncome\" &&\r\n                        (sortDirection === \"ASC\" ? (\r\n                            <AscendingIcon />\r\n                        ) : (\r\n                            <DescendingIcon />\r\n                        ))}\r\n                </span> */}\r\n            </DataCell>\r\n            <DataCell\r\n                onClick={() => onSortChange(\"averageIncome\")}\r\n                active={sortProperty === \"averageIncome\"}\r\n            >\r\n                <span>Average Income</span>\r\n                {/* <span>\r\n                    {sortProperty === \"averageIncome\" &&\r\n                        (sortDirection === \"ASC\" ? (\r\n                            <AscendingIcon />\r\n                        ) : (\r\n                            <DescendingIcon />\r\n                        ))}\r\n                </span> */}\r\n            </DataCell>\r\n            <DataCell\r\n                onClick={() => onSortChange(\"lastMonthIncome\")}\r\n                active={sortProperty === \"lastMonthIncome\"}\r\n            >\r\n                <span>Last month totalIncome</span>\r\n                {/* <span>\r\n                    {sortProperty === \"lastMonthIncome\" &&\r\n                        (sortDirection === \"ASC\" ? (\r\n                            <AscendingIcon />\r\n                        ) : (\r\n                            <DescendingIcon />\r\n                        ))}\r\n                </span> */}\r\n            </DataCell>\r\n            <DataCell\r\n                onClick={() => onSortChange(\"id\")}\r\n                active={sortProperty === \"id\"}\r\n            >\r\n                <span>Id</span>\r\n                {/* <span>\r\n                    {sortProperty === \"id\" &&\r\n                        (sortDirection === \"ASC\" ? (\r\n                            <AscendingIcon />\r\n                        ) : (\r\n                            <DescendingIcon />\r\n                        ))}\r\n                </span> */}\r\n            </DataCell>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default TableSortingRow;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport LoupIcon from \"../assets/LoupIcon/LoupIcon\";\r\n\r\nconst SearchField = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst InputField = styled.input`\r\n    border: solid 1px red;\r\n    width: 100%;\r\n    background-color: ${(props) => (props.active ? \"pink\" : \"\")};\r\n    &:hover {\r\n        background-color: pink;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n        font-size: 10px;\r\n    }\r\n`;\r\n\r\nconst DataField = styled.td`\r\n    max-width: 100%;\r\n`;\r\n\r\nconst TableFilteringRow = ({\r\n    onFilterChange,\r\n    filterProperty,\r\n    filterPhrase,\r\n}) => {\r\n    return (\r\n        <tr>\r\n            <DataField>\r\n                <LoupIcon />\r\n            </DataField>\r\n            <DataField>\r\n                <SearchField>\r\n                    <InputField\r\n                        type=\"text\"\r\n                        onChange={(e) =>\r\n                            onFilterChange(\"name\", e.target.value.toLowerCase())\r\n                        }\r\n                        value={filterProperty !== \"name\" ? \"\" : filterPhrase}\r\n                        active={\r\n                            filterProperty === \"name\" && filterPhrase !== \"\"\r\n                        }\r\n                        placeholder=\"e.g. Hammes\"\r\n                    />\r\n                </SearchField>\r\n            </DataField>\r\n            <DataField>\r\n                <InputField\r\n                    type=\"text\"\r\n                    onChange={(e) =>\r\n                        onFilterChange(\"city\", e.target.value.toLowerCase())\r\n                    }\r\n                    value={filterProperty !== \"city\" ? \"\" : filterPhrase}\r\n                    active={filterProperty === \"city\" && filterPhrase !== \"\"}\r\n                    placeholder=\"e.g. East Rose\"\r\n                />\r\n            </DataField>\r\n            <DataField>\r\n                <InputField\r\n                    type=\"text\"\r\n                    onChange={(e) =>\r\n                        onFilterChange(\r\n                            \"totalIncome\",\r\n                            e.target.value.toLowerCase()\r\n                        )\r\n                    }\r\n                    value={filterProperty !== \"totalIncome\" ? \"\" : filterPhrase}\r\n                    active={\r\n                        filterProperty === \"totalIncome\" && filterPhrase !== \"\"\r\n                    }\r\n                    placeholder=\"e.g. 233050\"\r\n                />\r\n            </DataField>\r\n            <DataField>\r\n                <InputField\r\n                    type=\"text\"\r\n                    onChange={(e) =>\r\n                        onFilterChange(\r\n                            \"averageIncome\",\r\n                            e.target.value.toLowerCase()\r\n                        )\r\n                    }\r\n                    value={\r\n                        filterProperty !== \"averageIncome\" ? \"\" : filterPhrase\r\n                    }\r\n                    active={\r\n                        filterProperty === \"averageIncome\" &&\r\n                        filterPhrase !== \"\"\r\n                    }\r\n                    placeholder=\"e.g. 4668\"\r\n                />\r\n            </DataField>\r\n            <DataField>\r\n                <InputField\r\n                    type=\"text\"\r\n                    onChange={(e) =>\r\n                        onFilterChange(\r\n                            \"lastMonthIncome\",\r\n                            e.target.value.toLowerCase()\r\n                        )\r\n                    }\r\n                    value={\r\n                        filterProperty !== \"lastMonthIncome\" ? \"\" : filterPhrase\r\n                    }\r\n                    active={\r\n                        filterProperty === \"lastMonthIncome\" &&\r\n                        filterPhrase !== \"\"\r\n                    }\r\n                    placeholder=\"e.g. 9964\"\r\n                />\r\n            </DataField>\r\n            <DataField>\r\n                <InputField\r\n                    type=\"text\"\r\n                    onChange={(e) =>\r\n                        onFilterChange(\"id\", e.target.value.toLowerCase())\r\n                    }\r\n                    value={filterProperty !== \"id\" ? \"\" : filterPhrase}\r\n                    active={filterProperty === \"id\" && filterPhrase !== \"\"}\r\n                    placeholder=\"e.g. 12\"\r\n                />\r\n            </DataField>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default TableFilteringRow;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DataCell = styled.td`\r\n    max-width: 100%;\r\n    border-bottom: solid gray 1px;\r\n    text-align: left;\r\n`;\r\n\r\nconst NumberDataCell = styled.td`\r\n    max-width: 100%;\r\n    border-bottom: solid gray 1px;\r\n    text-align: right;\r\n`;\r\n\r\nconst TableContetRow = ({ company, index, offset }) => {\r\n    return (\r\n        <tr key={company.id}>\r\n            <DataCell>{offset + index + 1}</DataCell>\r\n            <DataCell>{company.name}</DataCell>\r\n            <DataCell>{company.city}</DataCell>\r\n            <NumberDataCell>{company.totalIncome}</NumberDataCell>\r\n            <NumberDataCell>{company.averageIncome}</NumberDataCell>\r\n            <NumberDataCell>{company.lastMonthIncome}</NumberDataCell>\r\n            <NumberDataCell>{company.id}</NumberDataCell>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default TableContetRow;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport PaginationBar from \"../PaginationBar/PaginationBar\";\r\nimport TableHeader from \"../TableHeader/TableHeader\";\r\nimport TableSortingRow from \"../TableSortingRow/TableSortingRow\";\r\nimport TableFilteringRow from \"../TableFilteringRow/TableFilteringRow\";\r\nimport TableContetRow from \"../TableContetRow/TableContetRow\";\r\n\r\nconst Table = ({ companiesData, displayNumber }) => {\r\n    const [sortProperty, changeSortProperty] = useState(null);\r\n    const [sortDirection, changeSortDirection] = useState(null);\r\n    const [filterPhrase, changeFiltePhrase] = useState(null);\r\n    const [filterProperty, changeFilterProperty] = useState(null);\r\n    const [firmy, zmienFirmy] = useState([...companiesData]);\r\n    const [offset, changeOffset] = useState(0);\r\n    const [filteredCompaniesNumber, changeFilteredCompaniesNumber] = useState(\r\n        20\r\n    );\r\n\r\n    useEffect(() => {\r\n        let updatedList = [...companiesData];\r\n\r\n        if (filterProperty) {\r\n            updatedList = updatedList.filter(filterFunction);\r\n        }\r\n\r\n        if (sortProperty) {\r\n            updatedList.sort(sortFunction);\r\n        }\r\n\r\n        changeFilteredCompaniesNumber(updatedList.length);\r\n\r\n        zmienFirmy(updatedList.slice(offset, offset + 20));\r\n    }, [filterPhrase, filterProperty, sortDirection, sortProperty, offset]);\r\n\r\n    const filterFunction = (comp) => {\r\n        if (filterPhrase === \"\") {\r\n            return true;\r\n        }\r\n\r\n        return comp[filterProperty]\r\n            .toString()\r\n            .toLowerCase()\r\n\r\n            .includes(filterPhrase);\r\n    };\r\n\r\n    const sortFunction = (a, b) => {\r\n        return sortDirection === \"ASC\"\r\n            ? a[sortProperty] > b[sortProperty]\r\n                ? 1\r\n                : -1\r\n            : a[sortProperty] < b[sortProperty]\r\n            ? 1\r\n            : -1;\r\n    };\r\n\r\n    const onSortChange = (sortProp) => {\r\n        if (sortProperty === sortProp) {\r\n            if (sortDirection === \"ASC\") {\r\n                changeSortDirection(\"DESC\");\r\n            } else if (sortDirection === \"DESC\") {\r\n                changeSortDirection(null);\r\n                changeSortProperty(null);\r\n            } else {\r\n                changeSortDirection(\"ASC\");\r\n            }\r\n        } else {\r\n            changeSortDirection(\"ASC\");\r\n            changeSortProperty(sortProp);\r\n        }\r\n    };\r\n\r\n    const onFilterChange = (filterProp, filterVal) => {\r\n        changeOffset(0);\r\n        changeFilterProperty(filterProp);\r\n        changeFiltePhrase(filterVal);\r\n    };\r\n\r\n    const clearFilters = () => {\r\n        changeOffset(0);\r\n        changeFilterProperty(null);\r\n        changeFiltePhrase(null);\r\n        changeSortDirection(null);\r\n        changeSortProperty(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TableHeader\r\n                clear={clearFilters}\r\n                sortProp={sortProperty}\r\n                sortDir={sortDirection}\r\n                filterProp={filterProperty}\r\n                filterPhr={filterPhrase}\r\n            />\r\n            <table>\r\n                <thead>\r\n                    <TableSortingRow\r\n                        onSortChange={onSortChange}\r\n                        sortProperty={sortProperty}\r\n                        sortDirection={sortDirection}\r\n                    />\r\n                    <TableFilteringRow\r\n                        onFilterChange={onFilterChange}\r\n                        filterProperty={filterProperty}\r\n                        filterPhrase={filterPhrase}\r\n                    />\r\n                </thead>\r\n                <tbody>\r\n                    {firmy.map((elem, index) => (\r\n                        <TableContetRow\r\n                            company={elem}\r\n                            index={index}\r\n                            offset={offset}\r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <PaginationBar\r\n                changeOffset={changeOffset}\r\n                offset={offset}\r\n                itemsNumber={filteredCompaniesNumber}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Table from \"./Table/Table\";\r\n\r\nconst AppBody = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 10px;\r\n\r\n    @media (max-width: 1024px) {\r\n        font-size: 10px;\r\n    }\r\n`;\r\n\r\nfunction App() {\r\n    const [isLoading, changeLoading] = useState(true);\r\n    const [companiesList, updateCompaniesList] = useState([]);\r\n    const [companiesData, updateCompaniesData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        changeLoading(true);\r\n        axios\r\n            .get(`https://recruitment.hal.skygate.io/companies`)\r\n            .then((res) => {\r\n                updateCompaniesList(res.data);\r\n                changeLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        changeLoading(true);\r\n        axios\r\n            .all(\r\n                companiesList.map((elem) =>\r\n                    axios.get(\r\n                        `https://recruitment.hal.skygate.io/incomes/${elem.id}`\r\n                    )\r\n                )\r\n            )\r\n            .then(\r\n                axios.spread((...responses) => {\r\n                    const companiesIncomes = responses;\r\n\r\n                    const updatedCompanies = companiesIncomes.map((elem) => {\r\n                        const companyToUpdate = companiesList.find(\r\n                            (company) => company.id === elem.data.id\r\n                        );\r\n\r\n                        let lastMonthIncome = 0;\r\n\r\n                        const sumOfIncomes = elem.data.incomes\r\n                            .map((income) => {\r\n                                const data = new Date(income.date);\r\n\r\n                                const year = data.getFullYear();\r\n                                const month = data.getMonth();\r\n\r\n                                if (\r\n                                    year === new Date().getFullYear() &&\r\n                                    month === 0 // month === new Date().getMonth()\r\n                                ) {\r\n                                    lastMonthIncome += parseFloat(income.value);\r\n                                }\r\n\r\n                                return income.value;\r\n                            })\r\n                            .reduce(\r\n                                (prev, curr) =>\r\n                                    parseFloat(prev) + parseFloat(curr)\r\n                            );\r\n\r\n                        const updated = Object.assign(companyToUpdate, {\r\n                            totalIncome: Number(sumOfIncomes).toFixed(2),\r\n                            averageIncome: Number(\r\n                                sumOfIncomes / elem.data.incomes.length\r\n                            ).toFixed(2),\r\n                            lastMonthIncome: Number(lastMonthIncome).toFixed(2),\r\n                        });\r\n\r\n                        return updated;\r\n                    });\r\n\r\n                    updateCompaniesData(updatedCompanies);\r\n                    changeLoading(false);\r\n                })\r\n            )\r\n            .catch((errors) => {\r\n                console.log(errors);\r\n                changeLoading(false);\r\n            });\r\n    }, [companiesList]);\r\n\r\n    return (\r\n        <AppBody>\r\n            {isLoading && <h1>loading</h1>}\r\n            {!isLoading && <Table companiesData={companiesData} />}\r\n            <div>\r\n                <div>\r\n                    Icons made by{\" \"}\r\n                    <a\r\n                        href=\"https://www.flaticon.com/authors/freepik\"\r\n                        title=\"Freepik\"\r\n                    >\r\n                        Freepik\r\n                    </a>{\" \"}\r\n                    from{\" \"}\r\n                    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n                        www.flaticon.com\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </AppBody>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}